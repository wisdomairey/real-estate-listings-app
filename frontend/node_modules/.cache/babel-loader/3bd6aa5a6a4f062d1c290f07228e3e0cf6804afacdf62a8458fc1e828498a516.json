{"ast":null,"code":"import api from './api';\nexport const authService = {\n  // Login\n  async login(credentials) {\n    const response = await api.post('/auth/login', credentials);\n    if (response.data.success) {\n      const {\n        token,\n        user\n      } = response.data.data;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n    return response.data;\n  },\n  // Logout\n  async logout() {\n    try {\n      await api.post('/auth/logout');\n    } catch (error) {\n      console.error('Logout API error:', error);\n    } finally {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n    }\n  },\n  // Get current user\n  async getCurrentUser() {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n  // Verify token\n  async verifyToken() {\n    const response = await api.get('/auth/verify');\n    return response.data;\n  },\n  // Change password\n  async changePassword(passwords) {\n    const response = await api.put('/auth/change-password', passwords);\n    return response.data;\n  },\n  // Get stored user\n  getStoredUser() {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  // Get stored token\n  getStoredToken() {\n    return localStorage.getItem('token');\n  },\n  // Check if user is authenticated\n  isAuthenticated() {\n    return !!this.getStoredToken();\n  },\n  // Check if user is admin\n  isAdmin() {\n    const user = this.getStoredUser();\n    return user && user.role === 'admin';\n  }\n};","map":{"version":3,"names":["api","authService","login","credentials","response","post","data","success","token","user","localStorage","setItem","JSON","stringify","logout","error","console","removeItem","getCurrentUser","get","verifyToken","changePassword","passwords","put","getStoredUser","getItem","parse","getStoredToken","isAuthenticated","isAdmin","role"],"sources":["C:/Users/ADMIN/Documents/Web Designs/full-stack/upwork/real-estate-listings-app/frontend/src/services/authService.js"],"sourcesContent":["import api from './api';\r\n\r\nexport const authService = {\r\n  // Login\r\n  async login(credentials) {\r\n    const response = await api.post('/auth/login', credentials);\r\n    if (response.data.success) {\r\n      const { token, user } = response.data.data;\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n    }\r\n    return response.data;\r\n  },\r\n\r\n  // Logout\r\n  async logout() {\r\n    try {\r\n      await api.post('/auth/logout');\r\n    } catch (error) {\r\n      console.error('Logout API error:', error);\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n    }\r\n  },\r\n\r\n  // Get current user\r\n  async getCurrentUser() {\r\n    const response = await api.get('/auth/me');\r\n    return response.data;\r\n  },\r\n\r\n  // Verify token\r\n  async verifyToken() {\r\n    const response = await api.get('/auth/verify');\r\n    return response.data;\r\n  },\r\n\r\n  // Change password\r\n  async changePassword(passwords) {\r\n    const response = await api.put('/auth/change-password', passwords);\r\n    return response.data;\r\n  },\r\n\r\n  // Get stored user\r\n  getStoredUser() {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n\r\n  // Get stored token\r\n  getStoredToken() {\r\n    return localStorage.getItem('token');\r\n  },\r\n\r\n  // Check if user is authenticated\r\n  isAuthenticated() {\r\n    return !!this.getStoredToken();\r\n  },\r\n\r\n  // Check if user is admin\r\n  isAdmin() {\r\n    const user = this.getStoredUser();\r\n    return user && user.role === 'admin';\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,WAAW,GAAG;EACzB;EACA,MAAMC,KAAKA,CAACC,WAAW,EAAE;IACvB,MAAMC,QAAQ,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;IAC3D,IAAIC,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;MACzB,MAAM;QAAEC,KAAK;QAAEC;MAAK,CAAC,GAAGL,QAAQ,CAACE,IAAI,CAACA,IAAI;MAC1CI,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;MACpCE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAAC,CAAC;IACpD;IACA,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMQ,MAAMA,CAAA,EAAG;IACb,IAAI;MACF,MAAMd,GAAG,CAACK,IAAI,CAAC,cAAc,CAAC;IAChC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IAC3C,CAAC,SAAS;MACRL,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;MAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IACjC;EACF,CAAC;EAED;EACA,MAAMC,cAAcA,CAAA,EAAG;IACrB,MAAMd,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,UAAU,CAAC;IAC1C,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMc,WAAWA,CAAA,EAAG;IAClB,MAAMhB,QAAQ,GAAG,MAAMJ,GAAG,CAACmB,GAAG,CAAC,cAAc,CAAC;IAC9C,OAAOf,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACA,MAAMe,cAAcA,CAACC,SAAS,EAAE;IAC9B,MAAMlB,QAAQ,GAAG,MAAMJ,GAAG,CAACuB,GAAG,CAAC,uBAAuB,EAAED,SAAS,CAAC;IAClE,OAAOlB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED;EACAkB,aAAaA,CAAA,EAAG;IACd,MAAMf,IAAI,GAAGC,YAAY,CAACe,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOhB,IAAI,GAAGG,IAAI,CAACc,KAAK,CAACjB,IAAI,CAAC,GAAG,IAAI;EACvC,CAAC;EAED;EACAkB,cAAcA,CAAA,EAAG;IACf,OAAOjB,YAAY,CAACe,OAAO,CAAC,OAAO,CAAC;EACtC,CAAC;EAED;EACAG,eAAeA,CAAA,EAAG;IAChB,OAAO,CAAC,CAAC,IAAI,CAACD,cAAc,CAAC,CAAC;EAChC,CAAC;EAED;EACAE,OAAOA,CAAA,EAAG;IACR,MAAMpB,IAAI,GAAG,IAAI,CAACe,aAAa,CAAC,CAAC;IACjC,OAAOf,IAAI,IAAIA,IAAI,CAACqB,IAAI,KAAK,OAAO;EACtC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}