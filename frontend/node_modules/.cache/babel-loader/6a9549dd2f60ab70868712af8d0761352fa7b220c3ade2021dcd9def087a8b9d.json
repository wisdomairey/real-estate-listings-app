{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Documents\\\\Web Designs\\\\full-stack\\\\real-estate-listings-app\\\\frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authService } from '../services/authService';\n\n// Initial state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  error: null\n};\n\n// Action types\nconst AUTH_ACTIONS = {\n  LOGIN_START: 'LOGIN_START',\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\n  LOGOUT: 'LOGOUT',\n  SET_LOADING: 'SET_LOADING',\n  CLEAR_ERROR: 'CLEAR_ERROR',\n  UPDATE_USER: 'UPDATE_USER'\n};\n\n// Reducer\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case AUTH_ACTIONS.LOGIN_START:\n      return {\n        ...state,\n        isLoading: true,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\n      return {\n        ...state,\n        user: action.payload,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.LOGIN_FAILURE:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: action.payload\n      };\n    case AUTH_ACTIONS.LOGOUT:\n      return {\n        ...state,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false,\n        error: null\n      };\n    case AUTH_ACTIONS.SET_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case AUTH_ACTIONS.CLEAR_ERROR:\n      return {\n        ...state,\n        error: null\n      };\n    case AUTH_ACTIONS.UPDATE_USER:\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const initializeAuth = async () => {\n      dispatch({\n        type: AUTH_ACTIONS.SET_LOADING,\n        payload: true\n      });\n      try {\n        const token = authService.getStoredToken();\n        const user = authService.getStoredUser();\n        if (token && user) {\n          // Verify token is still valid\n          try {\n            await authService.verifyToken();\n            dispatch({\n              type: AUTH_ACTIONS.LOGIN_SUCCESS,\n              payload: user\n            });\n          } catch (error) {\n            // Token is invalid, clear stored data\n            authService.logout();\n            dispatch({\n              type: AUTH_ACTIONS.LOGOUT\n            });\n          }\n        } else {\n          dispatch({\n            type: AUTH_ACTIONS.LOGOUT\n          });\n        }\n      } catch (error) {\n        console.error('Auth initialization error:', error);\n        dispatch({\n          type: AUTH_ACTIONS.LOGOUT\n        });\n      } finally {\n        dispatch({\n          type: AUTH_ACTIONS.SET_LOADING,\n          payload: false\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async credentials => {\n    dispatch({\n      type: AUTH_ACTIONS.LOGIN_START\n    });\n    try {\n      const response = await authService.login(credentials);\n      if (response.success) {\n        dispatch({\n          type: AUTH_ACTIONS.LOGIN_SUCCESS,\n          payload: response.data.user\n        });\n        return response;\n      } else {\n        throw new Error(response.message);\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message || 'Login failed';\n      dispatch({\n        type: AUTH_ACTIONS.LOGIN_FAILURE,\n        payload: errorMessage\n      });\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      await authService.logout();\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: AUTH_ACTIONS.LOGOUT\n      });\n    }\n  };\n\n  // Clear error function\n  const clearError = () => {\n    dispatch({\n      type: AUTH_ACTIONS.CLEAR_ERROR\n    });\n  };\n\n  // Update user function\n  const updateUser = userData => {\n    dispatch({\n      type: AUTH_ACTIONS.UPDATE_USER,\n      payload: userData\n    });\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return state.user && state.user.role === 'admin';\n  };\n\n  // Get user initials for avatar\n  const getUserInitials = () => {\n    if (!state.user) return '';\n    const {\n      firstName,\n      lastName,\n      email\n    } = state.user;\n    if (firstName && lastName) {\n      return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase();\n    } else if (firstName) {\n      return firstName.charAt(0).toUpperCase();\n    } else if (email) {\n      return email.charAt(0).toUpperCase();\n    }\n    return 'U';\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    clearError,\n    updateUser,\n    isAdmin,\n    getUserInitials\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use auth context\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authService","jsxDEV","_jsxDEV","initialState","user","isAuthenticated","isLoading","error","AUTH_ACTIONS","LOGIN_START","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","SET_LOADING","CLEAR_ERROR","UPDATE_USER","authReducer","state","action","type","payload","AuthContext","AuthProvider","children","_s","dispatch","initializeAuth","token","getStoredToken","getStoredUser","verifyToken","logout","console","login","credentials","response","success","data","Error","message","_error$response","_error$response$data","errorMessage","clearError","updateUser","userData","localStorage","setItem","JSON","stringify","isAdmin","role","getUserInitials","firstName","lastName","email","charAt","toUpperCase","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/ADMIN/Documents/Web Designs/full-stack/real-estate-listings-app/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authService } from '../services/authService';\r\n\r\n// Initial state\r\nconst initialState = {\r\n  user: null,\r\n  isAuthenticated: false,\r\n  isLoading: true,\r\n  error: null\r\n};\r\n\r\n// Action types\r\nconst AUTH_ACTIONS = {\r\n  LOGIN_START: 'LOGIN_START',\r\n  LOGIN_SUCCESS: 'LOGIN_SUCCESS',\r\n  LOGIN_FAILURE: 'LOGIN_FAILURE',\r\n  LOGOUT: 'LOGOUT',\r\n  SET_LOADING: 'SET_LOADING',\r\n  CLEAR_ERROR: 'CLEAR_ERROR',\r\n  UPDATE_USER: 'UPDATE_USER'\r\n};\r\n\r\n// Reducer\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case AUTH_ACTIONS.LOGIN_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: action.payload\r\n      };\r\n    case AUTH_ACTIONS.LOGOUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.SET_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: action.payload\r\n      };\r\n    case AUTH_ACTIONS.CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        error: null\r\n      };\r\n    case AUTH_ACTIONS.UPDATE_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Create context\r\nconst AuthContext = createContext();\r\n\r\n// Auth provider component\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: true });\r\n      \r\n      try {\r\n        const token = authService.getStoredToken();\r\n        const user = authService.getStoredUser();\r\n        \r\n        if (token && user) {\r\n          // Verify token is still valid\r\n          try {\r\n            await authService.verifyToken();\r\n            dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: user });\r\n          } catch (error) {\r\n            // Token is invalid, clear stored data\r\n            authService.logout();\r\n            dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n          }\r\n        } else {\r\n          dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n        }\r\n      } catch (error) {\r\n        console.error('Auth initialization error:', error);\r\n        dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n      } finally {\r\n        dispatch({ type: AUTH_ACTIONS.SET_LOADING, payload: false });\r\n      }\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (credentials) => {\r\n    dispatch({ type: AUTH_ACTIONS.LOGIN_START });\r\n    \r\n    try {\r\n      const response = await authService.login(credentials);\r\n      \r\n      if (response.success) {\r\n        dispatch({ type: AUTH_ACTIONS.LOGIN_SUCCESS, payload: response.data.user });\r\n        return response;\r\n      } else {\r\n        throw new Error(response.message);\r\n      }\r\n    } catch (error) {\r\n      const errorMessage = error.response?.data?.message || error.message || 'Login failed';\r\n      dispatch({ type: AUTH_ACTIONS.LOGIN_FAILURE, payload: errorMessage });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      await authService.logout();\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n    } finally {\r\n      dispatch({ type: AUTH_ACTIONS.LOGOUT });\r\n    }\r\n  };\r\n\r\n  // Clear error function\r\n  const clearError = () => {\r\n    dispatch({ type: AUTH_ACTIONS.CLEAR_ERROR });\r\n  };\r\n\r\n  // Update user function\r\n  const updateUser = (userData) => {\r\n    dispatch({ type: AUTH_ACTIONS.UPDATE_USER, payload: userData });\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return state.user && state.user.role === 'admin';\r\n  };\r\n\r\n  // Get user initials for avatar\r\n  const getUserInitials = () => {\r\n    if (!state.user) return '';\r\n    const { firstName, lastName, email } = state.user;\r\n    \r\n    if (firstName && lastName) {\r\n      return `${firstName.charAt(0)}${lastName.charAt(0)}`.toUpperCase();\r\n    } else if (firstName) {\r\n      return firstName.charAt(0).toUpperCase();\r\n    } else if (email) {\r\n      return email.charAt(0).toUpperCase();\r\n    }\r\n    return 'U';\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    logout,\r\n    clearError,\r\n    updateUser,\r\n    isAdmin,\r\n    getUserInitials\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}